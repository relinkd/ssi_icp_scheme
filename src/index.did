type Credential = record {
  did : text;
  title : text;
  dateIssued : nat64;
  validTime : nat64;
  body : text;
  "type" : text;
  issuer : text;
  identityHolder : text;
  standard : text;
};
type CredentialPayload = record {
  title : text;
  validTime : nat64;
  body : text;
  "type" : text;
  issuer : text;
  identityHolder : text;
  standard : text;
};
type _AzleResult = variant { Ok : bool; Err : text };
type _AzleResult_1 = variant { Ok : text; Err : text };
type _AzleResult_2 = variant { Ok : vec Credential; Err : text };
type _AzleResult_3 = variant { Ok : Credential; Err : text };
type _AzleResult_4 = variant { Ok : nat64; Err : text };
type _AzleResult_5 = variant { Ok : vec text; Err : text };
service : () -> {
  checkCredentialDateValidity : (text) -> (_AzleResult) query;
  deleteCredential : (text) -> (_AzleResult_1);
  getAllCredentialDatabase : () -> (_AzleResult_2) query;
  getCredential : (text) -> (_AzleResult_3) query;
  getCurrentTime : () -> (_AzleResult_4) query;
  getIssuerDatabaseKeys : () -> (_AzleResult_5) query;
  issueCredential : (CredentialPayload) -> (_AzleResult_3);
  registerIssuerAddress : (text) -> (_AzleResult_1);
}